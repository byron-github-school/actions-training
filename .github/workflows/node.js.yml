# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "release", "main", "feature.*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2

    - name: GitHub Actions Linting
      # You may pin to the exact commit or the version.
      # uses: nuwaycloud/action-linting@9f84b0fe8610ca3aafb0054ad01a7591916416b8
      uses: nuwaycloud/action-linting@v0.0.3
      
  codescan:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        
    steps: 
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2

    - name: Download-a-Build-Artifact
      uses: actions/download-artifact@v2.1.1
    - name: Official SonarQube Scan
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarqube-scan-action@a6ba0aafc293e03de5437af7edbc97f7d3ebc91a
      uses: SonarSource/sonarqube-scan-action@v1.2.0
    - name: check scan result
        run |
          echo "output=Download-a-Build-Artifact.output.scan.result"
          if output == "pass"
            stuff
          eslif
          
          
          
          
          
          
          
